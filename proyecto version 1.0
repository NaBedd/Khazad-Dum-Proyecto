#include <iostream>
#include <vector>
#include <string>

using namespace std;

class Personaje{

    //Atributos o propiedades:
public:
    string nombre;
    int danno;
    int salud;
    int rapidez;

    Personaje(string n, int dnno, int slud, int rpdz): nombre(n), danno(dnno), salud(slud), rapidez(rpdz){}

    void mostrarInformacion() { 
        cout << "El personaje "<< nombre<< "tiene estas estadísticas: "<<endl;
        cout<< "Daño: "<<danno<<endl;
        cout<< "Salud: "<<salud<<endl;
        cout<< "Rapidez: "<<rapidez << endl; 
    }
    //Métodos o comportamientos:
private:
    void ataque(){
        cout<<"Has atacado!"<<endl;
    }

    void sufre(){
        cout<<"El orco te ha atacado!!"<<endl;
    }

    bool huida(){
        return true;
    }
};

class Orco: public Personaje{
public:
    int fuerza;

    // Constructor de Orco que llama al constructor de Personaje. HERENCIAAAAAAA
    Orco(string n, int dnno, int slud, int rpdz, int fuerza_orco)
        : Personaje(n, dnno, slud, rpdz), fuerza(fuerza_orco) {}

    void mostrarinformacion(){ 
        Personaje::mostrarInformacion();
        cout << "Fuerza: " << fuerza << endl; 
    }

    void atacado(){
        cout << "El orco te acaba de atacar!!" << endl; 
    }
};

int main(){
    vector<Personaje*> personajes;
    personajes.push_back(new Orco("Grunt", 100, 20, 36, 50)); 

    for (const auto& personaje : personajes) {
        personaje->mostrarInformacion();
        cout << endl;
    }

    // Liberando memoria 
    for (auto& personaje : personajes) {
        delete personaje;
    }
    personajes.clear();

    return 0;
}
